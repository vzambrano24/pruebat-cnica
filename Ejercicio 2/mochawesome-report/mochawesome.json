{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-21T04:50:32.718Z",
    "end": "2023-04-21T04:50:32.919Z",
    "duration": 201,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb99362d-2e3e-4966-ad84-a648860d1a3a",
      "title": "",
      "fullFile": "cypress\\e2e\\petstore\\4searchstatus.cy.js",
      "file": "cypress\\e2e\\petstore\\4searchstatus.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c5531a4-90e5-4a38-870d-3817830ce07c",
          "title": "Consultar mascota por estatus y verificar ID y estatus",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "debe consultar mascotas por estatus y verificar ID y estatus",
              "fullTitle": "Consultar mascota por estatus y verificar ID y estatus debe consultar mascotas por estatus y verificar ID y estatus",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Hacer una petición a la API para consultar mascotas por estatus\ncy.request(\"GET\", `${apiUrl}?status=${status}`).then(response => {\n  // Verificar que la respuesta tenga un código de estado 200 (OK)\n  expect(response.status).to.equal(200);\n  // Verificar que la lista de mascotas contenga la mascota con el ID correcto\n  const pet = response.body.find(pet => pet.id === petId);\n  expect(pet).to.not.be.undefined;\n  // Verificar que el estatus de la mascota sea \"sold\"\n  expect(pet.status).to.equal(status);\n});",
              "err": {},
              "uuid": "5f385888-f4ca-4079-965e-e7d88a21247c",
              "parentUUID": "9c5531a4-90e5-4a38-870d-3817830ce07c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f385888-f4ca-4079-965e-e7d88a21247c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}